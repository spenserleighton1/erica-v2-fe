{"version":3,"sources":["components/Hero/Hero.js","components/Releases/Releases.js","components/Publications/Publications.js","components/About/About.js","components/Events/Events.js","services/config.js","services/fetch.js","services/api.js","containers/Home.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Hero","props","react_default","a","createElement","className","style","backgroundImage","concat","image","title","description","Releases","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","setState","slides","generateSlides","data","release","generateLinks","links","map","link","href","link_url","link_text","index","additional_links","Row_default","key","Col_default","md","sm","publisher_link","url","publisher_title","published_date","state","Container_default","fluid","lib_default","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","autoPlay","Component","Publications","genre","pub","genre_title","publication","publisher_url","publisher_name","year","About","text","Events","sortEvents","events","upcoming","past","forEach","event","upcomingpast","push","displayEvents","xl","event_name","event_date","event_time","handleClick","toToggle","display","_this2","toDisplay","buttonClassU","buttonClassP","onClick","config","getPage","page","fetch","method","apiFetch","then","response","json","Home","sections","items","section","x","acf_fc_layout","components_Releases_Releases","components_Publications_Publications","components_About_About","components_Events_Events","hero","homePageContent","results","_results$acf","acf","home_flex_content","components_Hero_Hero","App","containers_Home","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29b7a5a4.chunk.js","sourcesContent":["import React from 'react';\nimport './Hero.scss';\n// import Container from 'react-bootstrap/Container';\n// import Row from 'react-bootstrap/Row';\n// import Col from 'react-bootstrap/Col';\n\nfunction Hero(props) {\n  \n  return ( \n    <div className=\"hero\" style={{backgroundImage: `url(${ props.image })`}}>\n      <div className=\"hero-overlay\">\n        <h1>{ props.title }</h1>\n        <p>{ props.description }</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Hero;\n","import React, { Component } from 'react';\nimport './Releases.scss';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Slider from \"react-slick\";\n\n \nclass Releases extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            slides: []\n        };\n    }\n\n    componentDidMount = () => {\n        this.setState({ slides: this.generateSlides(this.props.data.release)})\n\n    }\n\n    generateLinks = (links) => {\n        return links.map((link) => {\n            return <a href={ link.link_url }>{ link.link_text }</a>\n        })\n    } \n\n    generateSlides = (slides) => {\n        return slides.map((release, index) => {\n            let links = this.generateLinks(release.additional_links)\n            return (\n                <Row key={ index } className=\"test-me\">\n                    <Col md={4} sm={12}>\n                      <div className=\"release-image-container\">\n                            <a href={ release.publisher_link }>\n                                <div className=\"image\" style={{backgroundImage: `url(${ release.image.url })`}}>\n                                    <div className=\"overlay\">\n                                        <h1>{ release.publisher_title }</h1>\n                                        <div className=\"overlay-divider\"></div>\n                                        { links }\n                                    </div>\n                                </div>\n                            </a>\n                            <p>{ release.published_date }</p>\n                        </div>\n                    </Col>\n                    <Col md={8} sm={12}>\n                    <div className=\"release-detail\">\n                        <h3>{ release.title }</h3>\n                        <div className=\"detail-divider\"></div>\n                        <div className=\"release-links\">{ links }</div>    \n                        <p>{ release.description }</p>    \n                        <div className=\"release-reviews-container\">\n\n                        </div>\n                    </div>\n                    </Col>\n                </Row>\n            )\n        });\n    }\n  render() {\n    var settings = {\n      dots: false,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1,\n      arrows: false,\n      autoPlay: true,\n\n    };\n    return (\n        <Container fluid={true} className=\"releases-container\">\n            <h1 className=\"fick\">Releases.</h1>\n            <Slider {...settings}>\n                {this.state.slides}\n            </Slider>\n        </Container>\n    );\n  }\n}\n\nexport default Releases;\n\n\n\n\n","import React from 'react';\nimport './Publications.scss';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction Publications(props) {\n\n    const displaySinglePublication = (publication) => {\n\n        return publication.map(pub => {\n            return <div className=\"publication-detail\">\n                <a href={pub.publisher_url}>{pub.title}</a>\n                <a className=\"pub-link\" href={pub.publisher_url}>{pub.publisher_name} <span>|</span> {pub.year}</a>\n                \n            </div>\n        })\n    }\n\n    const displayPublications = (publication) => {\n        return publication.data.genre.map(pub => {\n            return <Col md={6} sm={12}>\n                    <h2>{ pub.genre_title }</h2>\n                    <div className=\"publication\">\n                        <div>\n                            { displaySinglePublication(pub.publication) }\n                        </div>\n                    </div>\n                </Col>\n        })\n        \n\n\n    }\n\n  return (\n\n    <Container fluid={true} className=\"publications-container\">\n        <h1>Publications.</h1>\n        <Row>\n            {displayPublications(props)}\n        </Row>\n    </Container>\n  );\n}\n\nexport default Publications;\n\n\n\n\n","import React from 'react';\nimport './About.scss';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nfunction About(props) {\n\n  return (\n\n    <Container fluid={true} className=\"about-container\">\n        <h1>About.</h1>\n        <Row>\n            <Col md={8}>\n            <div className=\"about-text\">\n                { props.data.text }\n            </div>\n            </Col>\n            <Col md={4}>\n                <div className=\"about-image\" style={{backgroundImage: `url(${ props.data.image.url })`}}>\n                </div>\n            </Col>\n        </Row>\n    </Container>\n  );\n}\n\nexport default About;\n\n\n\n\n","import React, { Component } from 'react';\nimport './Events.scss';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass Events extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n           past: [],\n           upcoming: [],\n           display: 'upcoming'\n        };\n\n    }\n    componentDidMount() {\n        let { events } = this.props.data;\n        this.sortEvents(events)\n    }\n\n    sortEvents = (events) => {\n        let upcoming = []\n        let past = []\n\n        events.forEach(event => {\n            if (event.upcomingpast === 'upcoming') {\n                upcoming.push(event)\n            } else {\n                past.push(event)\n            }\n        });\n\n        this.setState({\n            upcoming,\n            past\n        })\n    }\n    // console.log(props.data.events)\n    // description: \"this event was a cool event i love going to fun events.\"\n    // event_date: \"12-12-12\"\n    // event_name: \"Test Event\"\n    // event_time: \"7:00pm\"\n    // image: \"http://localhost:8080/wp-content/uploads/2019/06/a.png\"\n    // link: \"https://google.com\"\n    // upcomingpast: \"past\"\n\n    displayEvents = (events) => {\n        return events.map((event) => {\n            return (\n                <Col sm={6} md={4} xl={3}>\n                    <div className=\"event\">\n                        <a href={ event.link }>\n                            <div className=\"image\" style={{ backgroundImage: `url(${ event.image })`}}></div>\n                            <div className=\"event-divider\"></div>\n                            <p className=\"name\">{ event.event_name }</p>\n                            <p className=\"time\">{ event.event_date} <span>|</span> {event.event_time}</p>\n                            <div className=\"event-divider\"></div>\n                            <p className=\"desc\">{ event.description }</p>\n                        </a>\n                    </div>\n                </Col>\n            )\n        })\n    }\n\n    handleClick = (toToggle) => {\n        toToggle === 'u' ? this.setState({ display: 'upcoming'}) : this.setState({ display: 'past'})\n    }\n    \n    render() {\n        let toDisplay = this.state.display === 'upcoming' ? this.displayEvents(this.state.upcoming) : this.displayEvents(this.state.past) \n        let buttonClassU = this.state.display === 'upcoming' ? 'active' : '';\n        let buttonClassP = this.state.display === 'past' ? 'active' : '';\n        return (\n            <Container fluid={true} className=\"events-container shrink\">\n                <Row className=\"events-nav\">\n                    <Col sm={6}>\n                        <h1>Events.</h1>\n                    </Col>\n                    <Col sm={6} className=\"nav\">\n                        <button className={ buttonClassU } onClick={ () => this.handleClick('u') }>Upcoming</button>\n                        <button className={ buttonClassP } onClick={ () => this.handleClick('p') }>Past</button>\n                    </Col>\n\n                </Row>\n                <Row>\n                    { toDisplay }\n                </Row>\n            </Container>\n        );\n    }\n}\n\nexport default Events;\n\n\n\n\n","import apiKey from './apiKey'\n\nexport default {\n  apiKey,\n  url: 'https://ericacms-4d2e0b.easywp.com/wp-json/wp/v2'\n}","import { apiFetch } from './api'\n\nexport const getPage = (page) => {\n  return apiFetch(`/pages/${page}`)\n  .then(response => response.json())\n}\n\n\n\n\n\n","import config from './config';\n\nexport const apiFetch = (page) => {\n  return fetch(`${config.url}${page}`, {\n    method: 'GET'\n  })\n}\n","import React, { Component } from 'react';\nimport Header from '../components/Header/Header';\nimport Hero from '../components/Hero/Hero'\nimport Releases from '../components/Releases/Releases'\nimport Publications from '../components/Publications/Publications'\nimport About from '../components/About/About'\nimport Events from '../components/Events/Events'\nimport '../components/App/App.scss';\nimport { getPage } from '../services/fetch';\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n           hero: {},\n           homePageContent: []\n        };\n\n    }\n\n    componentDidMount(){\n        getPage('42')\n            .then(results => {\n                let { title, image, description, home_flex_content } = results.acf;\n            \n                this.setState({\n                    hero: {\n                        image: image.url,\n                        title,\n                        description\n                    },\n                    homePageContent: home_flex_content\n                })\n            })\n    }\n\n    sections = (sections) => {\n        let items = [];\n        sections.map((section, x) => { \n            \n            switch(section.acf_fc_layout) {\n                case 'releases':\n                    items.push(<Releases key={x} index={x} data={section}/>);\n                    break;\n                case 'publications':\n                    items.push(<Publications key={x} index={x} data={section}/>);\n                    break;\n                case 'about_section':\n                    items.push(<About key={x} index={x} data={section}/>);\n                    break;\n                case 'events':\n                    items.push(<Events key={x} index={x} data={section}/>);\n                    break;\n                default:\n                }\n        });\n\n        return items;\n    }\n\n    render() {\n        return (\n            <div>\n                {/* <Header /> */}\n                <Hero {...this.state.hero} />\n                { this.sections(this.state.homePageContent) }\n\n            </div>\n        );\n    }\n}\n  \n\nexport default Home;\n","import React from 'react';\nimport Home from '../../containers/Home'\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}